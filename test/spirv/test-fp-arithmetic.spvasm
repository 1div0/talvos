; SPIR-V
; Version: 1.0
; Schema: 0
               OpCapability Shader
               OpCapability Float64
               OpCapability VariablePointers
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_variable_pointers"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %24 "test_fp32_arithmetic" %18
               OpEntryPoint GLCompute %26 "test_fp64_arithmetic" %18
               OpSource OpenCL_C 120
               OpDecorate %19 SpecId 0
               OpDecorate %20 SpecId 1
               OpDecorate %21 SpecId 2
               OpDecorate %3 ArrayStride 4
               OpMemberDecorate %4 0 Offset 0
               OpDecorate %4 Block
               OpDecorate %14 ArrayStride 8
               OpMemberDecorate %15 0 Offset 0
               OpDecorate %15 Block
               OpDecorate %18 BuiltIn GlobalInvocationId
               OpDecorate %22 BuiltIn WorkgroupSize

               OpDecorate %a32_base DescriptorSet 0
               OpDecorate %a32_base Binding 0
               OpDecorate %b32_base DescriptorSet 0
               OpDecorate %b32_base Binding 1
               OpDecorate %add32_base DescriptorSet 0
               OpDecorate %add32_base Binding 2
               OpDecorate %sub32_base DescriptorSet 0
               OpDecorate %sub32_base Binding 3
               OpDecorate %mul32_base DescriptorSet 0
               OpDecorate %mul32_base Binding 4
               OpDecorate %div32_base DescriptorSet 0
               OpDecorate %div32_base Binding 5

               OpDecorate %a64_base DescriptorSet 0
               OpDecorate %a64_base Binding 0
               OpDecorate %b64_base DescriptorSet 0
               OpDecorate %b64_base Binding 1
               OpDecorate %add64_base DescriptorSet 0
               OpDecorate %add64_base Binding 2
               OpDecorate %sub64_base DescriptorSet 0
               OpDecorate %sub64_base Binding 3
               OpDecorate %mul64_base DescriptorSet 0
               OpDecorate %mul64_base Binding 4
               OpDecorate %div64_base DescriptorSet 0
               OpDecorate %div64_base Binding 5

          %1 = OpTypeFloat 32
          %2 = OpTypePointer StorageBuffer %1
          %3 = OpTypeRuntimeArray %1
          %4 = OpTypeStruct %3
          %5 = OpTypePointer StorageBuffer %4
          %6 = OpTypeInt 32 0
          %7 = OpTypeVoid
          %8 = OpTypeFunction %7
          %9 = OpTypeVector %6 3
         %10 = OpTypePointer Input %9
         %11 = OpTypePointer Input %6
         %12 = OpTypeFloat 64
         %13 = OpTypePointer StorageBuffer %12
         %14 = OpTypeRuntimeArray %12
         %15 = OpTypeStruct %14
         %16 = OpTypePointer StorageBuffer %15
         %17 = OpTypePointer Private %9
         %i0 = OpConstant %6 0
         %18 = OpVariable %10 Input
         %19 = OpSpecConstant %6 1
         %20 = OpSpecConstant %6 1
         %21 = OpSpecConstant %6 1
         %22 = OpSpecConstantComposite %9 %19 %20 %21
         %23 = OpVariable %17 Private %22

   %a32_base = OpVariable %5 StorageBuffer
   %b32_base = OpVariable %5 StorageBuffer
 %add32_base = OpVariable %5 StorageBuffer
 %sub32_base = OpVariable %5 StorageBuffer
 %mul32_base = OpVariable %5 StorageBuffer
 %div32_base = OpVariable %5 StorageBuffer

   %a64_base = OpVariable %16 StorageBuffer
   %b64_base = OpVariable %16 StorageBuffer
 %add64_base = OpVariable %16 StorageBuffer
 %sub64_base = OpVariable %16 StorageBuffer
 %mul64_base = OpVariable %16 StorageBuffer
 %div64_base = OpVariable %16 StorageBuffer

         %24 = OpFunction %7 None %8
         %25 = OpLabel
     %i32ptr = OpAccessChain %11 %18 %i0
        %i32 = OpLoad %6 %i32ptr
     %a32ptr = OpAccessChain %2 %a32_base %i0 %i32
        %a32 = OpLoad %1 %a32ptr
     %b32ptr = OpAccessChain %2 %b32_base %i0 %i32
        %b32 = OpLoad %1 %b32ptr

      %add32 = OpFAdd %1 %a32 %b32
  %add32_ptr = OpAccessChain %2 %add32_base %i0 %i32
               OpStore %add32_ptr %add32

      %sub32 = OpFSub %1 %a32 %b32
  %sub32_ptr = OpAccessChain %2 %sub32_base %i0 %i32
               OpStore %sub32_ptr %sub32

      %mul32 = OpFMul %1 %a32 %b32
  %mul32_ptr = OpAccessChain %2 %mul32_base %i0 %i32
               OpStore %mul32_ptr %mul32

      %div32 = OpFDiv %1 %a32 %b32
  %div32_ptr = OpAccessChain %2 %div32_base %i0 %i32
               OpStore %div32_ptr %div32

               OpReturn
               OpFunctionEnd

         %26 = OpFunction %7 None %8
         %27 = OpLabel
     %i64ptr = OpAccessChain %11 %18 %i0
        %i64 = OpLoad %6 %i64ptr
     %a64ptr = OpAccessChain %13 %a64_base %i0 %i64
        %a64 = OpLoad %12 %a64ptr
     %b64ptr = OpAccessChain %13 %b64_base %i0 %i64
        %b64 = OpLoad %12 %b64ptr

      %add64 = OpFAdd %12 %a64 %b64
  %add64_ptr = OpAccessChain %13 %add64_base %i0 %i64
               OpStore %add64_ptr %add64

      %sub64 = OpFSub %12 %a64 %b64
  %sub64_ptr = OpAccessChain %13 %sub64_base %i0 %i64
               OpStore %sub64_ptr %sub64

      %mul64 = OpFMul %12 %a64 %b64
  %mul64_ptr = OpAccessChain %13 %mul64_base %i0 %i64
               OpStore %mul64_ptr %mul64

      %div64 = OpFDiv %12 %a64 %b64
  %div64_ptr = OpAccessChain %13 %div64_base %i0 %i64
               OpStore %div64_ptr %div64

               OpReturn
               OpFunctionEnd
