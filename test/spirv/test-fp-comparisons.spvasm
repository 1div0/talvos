; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Schema: 0
               OpCapability Shader
               OpCapability VariablePointers
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_variable_pointers"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %26 "test_fp_comparisons" %20
               OpEntryPoint GLCompute %28 "generate_special"
               OpSource OpenCL_C 120
               OpDecorate %21 SpecId 0
               OpDecorate %22 SpecId 1
               OpDecorate %23 SpecId 2
               OpDecorate %3 ArrayStride 4
               OpMemberDecorate %4 0 Offset 0
               OpDecorate %4 Block
               OpDecorate %8 ArrayStride 4
               OpMemberDecorate %9 0 Offset 0
               OpDecorate %9 Block
               OpDecorate %20 BuiltIn GlobalInvocationId
               OpDecorate %24 BuiltIn WorkgroupSize
               OpDecorate %a_base DescriptorSet 0
               OpDecorate %a_base Binding 0
               OpDecorate %b_base DescriptorSet 0
               OpDecorate %b_base Binding 1
               OpDecorate %oeq_base DescriptorSet 0
               OpDecorate %oeq_base Binding 2
               OpDecorate %ueq_base DescriptorSet 0
               OpDecorate %ueq_base Binding 3
               OpDecorate %oneq_base DescriptorSet 0
               OpDecorate %oneq_base Binding 4
               OpDecorate %uneq_base DescriptorSet 0
               OpDecorate %uneq_base Binding 5
               OpDecorate %olt_base DescriptorSet 0
               OpDecorate %olt_base Binding 6
               OpDecorate %ult_base DescriptorSet 0
               OpDecorate %ult_base Binding 7
               OpDecorate %ogt_base DescriptorSet 0
               OpDecorate %ogt_base Binding 8
               OpDecorate %ugt_base DescriptorSet 0
               OpDecorate %ugt_base Binding 9
               OpDecorate %olte_base DescriptorSet 0
               OpDecorate %olte_base Binding 10
               OpDecorate %ulte_base DescriptorSet 0
               OpDecorate %ulte_base Binding 11
               OpDecorate %ogte_base DescriptorSet 0
               OpDecorate %ogte_base Binding 12
               OpDecorate %ugte_base DescriptorSet 0
               OpDecorate %ugte_base Binding 13
               OpDecorate %isnan_base DescriptorSet 0
               OpDecorate %isnan_base Binding 14
               OpDecorate %isinf_base DescriptorSet 0
               OpDecorate %isinf_base Binding 15
          %1 = OpTypeFloat 32
          %2 = OpTypePointer StorageBuffer %1
          %3 = OpTypeRuntimeArray %1
          %4 = OpTypeStruct %3
          %5 = OpTypePointer StorageBuffer %4
          %6 = OpTypeInt 32 0
          %7 = OpTypePointer StorageBuffer %6
          %8 = OpTypeRuntimeArray %6
          %9 = OpTypeStruct %8
         %10 = OpTypePointer StorageBuffer %9
         %11 = OpTypeVoid
         %12 = OpTypeFunction %11
         %13 = OpTypeVector %6 3
         %14 = OpTypePointer Input %13
         %15 = OpTypePointer Input %6
         %16 = OpTypeBool
         %17 = OpTypePointer Private %13
         %18 = OpConstant %6 0
         %19 = OpConstant %6 1
         %f0 = OpConstant %1 0
         %f1 = OpConstant %1 1
      %fneg1 = OpConstant %1 -1
        %i10 = OpConstant %6 10
        %i11 = OpConstant %6 11
        %i12 = OpConstant %6 12
        %i13 = OpConstant %6 13
        %i14 = OpConstant %6 14
        %i15 = OpConstant %6 15
        %i16 = OpConstant %6 16
        %i17 = OpConstant %6 17
         %20 = OpVariable %14 Input
         %21 = OpSpecConstant %6 1
         %22 = OpSpecConstant %6 1
         %23 = OpSpecConstant %6 1
         %24 = OpSpecConstantComposite %13 %21 %22 %23
         %25 = OpVariable %17 Private %24
     %a_base = OpVariable %5 StorageBuffer
     %b_base = OpVariable %5 StorageBuffer
   %oeq_base = OpVariable %10 StorageBuffer
   %ueq_base = OpVariable %10 StorageBuffer
  %oneq_base = OpVariable %10 StorageBuffer
  %uneq_base = OpVariable %10 StorageBuffer
   %olt_base = OpVariable %10 StorageBuffer
   %ult_base = OpVariable %10 StorageBuffer
   %ogt_base = OpVariable %10 StorageBuffer
   %ugt_base = OpVariable %10 StorageBuffer
  %olte_base = OpVariable %10 StorageBuffer
  %ulte_base = OpVariable %10 StorageBuffer
  %ogte_base = OpVariable %10 StorageBuffer
  %ugte_base = OpVariable %10 StorageBuffer
 %isnan_base = OpVariable %10 StorageBuffer
 %isinf_base = OpVariable %10 StorageBuffer


         %26 = OpFunction %11 None %12
         %27 = OpLabel
      %i_ptr = OpAccessChain %15 %20 %18
          %i = OpLoad %6 %i_ptr
      %a_ptr = OpAccessChain %2 %a_base %18 %i
          %a = OpLoad %1 %a_ptr
      %b_ptr = OpAccessChain %2 %b_base %18 %i
          %b = OpLoad %1 %b_ptr


        %oeq = OpFOrdEqual %16 %a %b
               OpSelectionMerge %oeq_end None
               OpBranchConditional %oeq %oeq_true %oeq_end
   %oeq_true = OpLabel
    %oeq_ptr = OpAccessChain %7 %oeq_base %18 %i
               OpStore %oeq_ptr %19
               OpBranch %oeq_end
    %oeq_end = OpLabel


        %ueq = OpFUnordEqual %16 %a %b
               OpSelectionMerge %ueq_end None
               OpBranchConditional %ueq %ueq_true %ueq_end
   %ueq_true = OpLabel
    %ueq_ptr = OpAccessChain %7 %ueq_base %18 %i
               OpStore %ueq_ptr %19
               OpBranch %ueq_end
    %ueq_end = OpLabel


       %oneq = OpFOrdNotEqual %16 %a %b
               OpSelectionMerge %oneq_end None
               OpBranchConditional %oneq %oneq_true %oneq_end
  %oneq_true = OpLabel
   %oneq_ptr = OpAccessChain %7 %oneq_base %18 %i
               OpStore %oneq_ptr %19
               OpBranch %oneq_end
   %oneq_end = OpLabel


       %uneq = OpFUnordNotEqual %16 %a %b
               OpSelectionMerge %uneq_end None
               OpBranchConditional %uneq %uneq_true %uneq_end
  %uneq_true = OpLabel
   %uneq_ptr = OpAccessChain %7 %uneq_base %18 %i
               OpStore %uneq_ptr %19
               OpBranch %uneq_end
   %uneq_end = OpLabel


        %olt = OpFOrdLessThan %16 %a %b
               OpSelectionMerge %olt_end None
               OpBranchConditional %olt %olt_true %olt_end
   %olt_true = OpLabel
    %olt_ptr = OpAccessChain %7 %olt_base %18 %i
               OpStore %olt_ptr %19
               OpBranch %olt_end
    %olt_end = OpLabel


        %ult = OpFUnordLessThan %16 %a %b
               OpSelectionMerge %ult_end None
               OpBranchConditional %ult %ult_true %ult_end
   %ult_true = OpLabel
    %ult_ptr = OpAccessChain %7 %ult_base %18 %i
               OpStore %ult_ptr %19
               OpBranch %ult_end
    %ult_end = OpLabel


        %ogt = OpFOrdGreaterThan %16 %a %b
               OpSelectionMerge %ogt_end None
               OpBranchConditional %ogt %ogt_true %ogt_end
   %ogt_true = OpLabel
    %ogt_ptr = OpAccessChain %7 %ogt_base %18 %i
               OpStore %ogt_ptr %19
               OpBranch %ogt_end
    %ogt_end = OpLabel


        %ugt = OpFUnordGreaterThan %16 %a %b
               OpSelectionMerge %ugt_end None
               OpBranchConditional %ugt %ugt_true %ugt_end
   %ugt_true = OpLabel
    %ugt_ptr = OpAccessChain %7 %ugt_base %18 %i
               OpStore %ugt_ptr %19
               OpBranch %ugt_end
    %ugt_end = OpLabel


       %olte = OpFOrdLessThanEqual %16 %a %b
               OpSelectionMerge %olte_end None
               OpBranchConditional %olte %olte_true %olte_end
  %olte_true = OpLabel
   %olte_ptr = OpAccessChain %7 %olte_base %18 %i
               OpStore %olte_ptr %19
               OpBranch %olte_end
   %olte_end = OpLabel


       %ulte = OpFUnordLessThanEqual %16 %a %b
               OpSelectionMerge %ulte_end None
               OpBranchConditional %ulte %ulte_true %ulte_end
  %ulte_true = OpLabel
   %ulte_ptr = OpAccessChain %7 %ulte_base %18 %i
               OpStore %ulte_ptr %19
               OpBranch %ulte_end
   %ulte_end = OpLabel


       %ogte = OpFOrdGreaterThanEqual %16 %a %b
               OpSelectionMerge %ogte_end None
               OpBranchConditional %ogte %ogte_true %ogte_end
  %ogte_true = OpLabel
   %ogte_ptr = OpAccessChain %7 %ogte_base %18 %i
               OpStore %ogte_ptr %19
               OpBranch %ogte_end
   %ogte_end = OpLabel


       %ugte = OpFUnordGreaterThanEqual %16 %a %b
               OpSelectionMerge %ugte_end None
               OpBranchConditional %ugte %ugte_true %ugte_end
  %ugte_true = OpLabel
   %ugte_ptr = OpAccessChain %7 %ugte_base %18 %i
               OpStore %ugte_ptr %19
               OpBranch %ugte_end
   %ugte_end = OpLabel


      %isnan = OpIsNan %16 %a
               OpSelectionMerge %isnan_end None
               OpBranchConditional %isnan %isnan_true %isnan_end
 %isnan_true = OpLabel
  %isnan_ptr = OpAccessChain %7 %isnan_base %18 %i
               OpStore %isnan_ptr %19
               OpBranch %isnan_end
  %isnan_end = OpLabel


      %isinf = OpIsInf %16 %a
               OpSelectionMerge %isinf_end None
               OpBranchConditional %isinf %isinf_true %isinf_end
 %isinf_true = OpLabel
  %isinf_ptr = OpAccessChain %7 %isinf_base %18 %i
               OpStore %isinf_ptr %19
               OpBranch %isinf_end
  %isinf_end = OpLabel


               OpReturn
               OpFunctionEnd


         %28 = OpFunction %11 None %12
         %29 = OpLabel

        %nan = OpFDiv %1 %f0 %f0
         %35 = OpAccessChain %2 %a_base %18 %i10
               OpStore %35 %nan
         %36 = OpAccessChain %2 %a_base %18 %i11
               OpStore %36 %nan
         %37 = OpAccessChain %2 %b_base %18 %i10
               OpStore %37 %nan
         %38 = OpAccessChain %2 %b_base %18 %i12
               OpStore %38 %nan

        %inf = OpFDiv %1 %f1 %f0
     %neginf = OpFDiv %1 %fneg1 %f0
         %39 = OpAccessChain %2 %a_base %18 %i13
               OpStore %39 %inf
         %40 = OpAccessChain %2 %a_base %18 %i14
               OpStore %40 %inf
         %41 = OpAccessChain %2 %a_base %18 %i15
               OpStore %41 %neginf
         %42 = OpAccessChain %2 %a_base %18 %i16
               OpStore %42 %inf
         %43 = OpAccessChain %2 %a_base %18 %i17
               OpStore %43 %neginf
         %44 = OpAccessChain %2 %b_base %18 %i13
               OpStore %44 %inf
         %45 = OpAccessChain %2 %b_base %18 %i14
               OpStore %45 %neginf
         %46 = OpAccessChain %2 %b_base %18 %i15
               OpStore %46 %neginf

                OpReturn
                OpFunctionEnd
